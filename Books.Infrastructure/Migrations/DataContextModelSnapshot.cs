// <auto-generated />
using System;
using Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Infrastructure.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Domain.Entities.Author", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("FirstName")
                        .HasColumnType("text")
                        .HasColumnName("first_name");

                    b.Property<string>("LastName")
                        .HasColumnType("text")
                        .HasColumnName("last_name");

                    b.HasKey("Id")
                        .HasName("pk_authors");

                    b.ToTable("authors", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("1c98c000-8f8e-4d3c-8d1e-7ec0ec93f1bb"),
                            FirstName = "Jane",
                            LastName = "Austen"
                        },
                        new
                        {
                            Id = new Guid("251e8346-65c1-496d-823c-cd433649347c"),
                            FirstName = "Harper",
                            LastName = "Lee"
                        },
                        new
                        {
                            Id = new Guid("517c6f8c-8abc-4183-a2b9-5bb9e76b3b3a"),
                            FirstName = "J.D",
                            LastName = "Salinger"
                        },
                        new
                        {
                            Id = new Guid("55febf99-1b0d-42b8-a43b-8e5a1c4b3690"),
                            FirstName = "F. Scott",
                            LastName = "Fitzgerald"
                        },
                        new
                        {
                            Id = new Guid("7b453ac1-18ca-4887-a8d9-ab81b4276d1e"),
                            FirstName = "Paulo",
                            LastName = "Coelho"
                        },
                        new
                        {
                            Id = new Guid("8997e2d9-5f02-4da4-a4ad-d069608fccde"),
                            FirstName = "Markus",
                            LastName = "Zusak"
                        },
                        new
                        {
                            Id = new Guid("b48af8fc-0899-4b36-9140-19c64a4f6fcd"),
                            FirstName = "C.S",
                            LastName = "Lewis"
                        },
                        new
                        {
                            Id = new Guid("b614713f-239b-4e6a-8ade-b87c9425c874"),
                            FirstName = "Dan",
                            LastName = "Brown"
                        },
                        new
                        {
                            Id = new Guid("c32c75c2-d6be-4391-97d5-b35f54a5520c"),
                            FirstName = "John",
                            LastName = "Steinbeck"
                        },
                        new
                        {
                            Id = new Guid("e9c23ec1-d8d2-4142-84ae-bbfdf1beab9a"),
                            FirstName = "Douglas",
                            LastName = "Adams"
                        },
                        new
                        {
                            Id = new Guid("f0024628-4947-41b2-8ed0-aab6c9e2bd51"),
                            FirstName = "Herman",
                            LastName = "Melville"
                        });
                });

            modelBuilder.Entity("Domain.Entities.Book", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<Guid>("AuthorId")
                        .HasColumnType("uuid")
                        .HasColumnName("author_id");

                    b.Property<int>("BookType")
                        .HasColumnType("integer")
                        .HasColumnName("book_type");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uuid")
                        .HasColumnName("category_id");

                    b.Property<int>("CopiesInUse")
                        .HasColumnType("integer")
                        .HasColumnName("copies_in_use");

                    b.Property<string>("Isbn")
                        .HasColumnType("text")
                        .HasColumnName("isbn");

                    b.Property<int?>("Status")
                        .HasColumnType("integer")
                        .HasColumnName("status");

                    b.Property<string>("Title")
                        .HasColumnType("text")
                        .HasColumnName("title");

                    b.Property<int>("TotalCopies")
                        .HasColumnType("integer")
                        .HasColumnName("total_copies");

                    b.HasKey("Id")
                        .HasName("pk_books");

                    b.HasIndex("AuthorId")
                        .HasDatabaseName("ix_books_author_id");

                    b.HasIndex("CategoryId")
                        .HasDatabaseName("ix_books_category_id");

                    b.ToTable("books", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("c2c9d469-d4d9-4f3e-86c6-88dcddf9a406"),
                            AuthorId = new Guid("1c98c000-8f8e-4d3c-8d1e-7ec0ec93f1bb"),
                            BookType = 0,
                            CategoryId = new Guid("1994ecb4-d361-4739-871d-c2bf902e463c"),
                            CopiesInUse = 80,
                            Isbn = "1234567891",
                            Title = "Pride and Prejudice",
                            TotalCopies = 100
                        },
                        new
                        {
                            Id = new Guid("339d8705-50fa-4bf6-b69b-f91456e3c907"),
                            AuthorId = new Guid("251e8346-65c1-496d-823c-cd433649347c"),
                            BookType = 1,
                            CategoryId = new Guid("1994ecb4-d361-4739-871d-c2bf902e463c"),
                            CopiesInUse = 65,
                            Isbn = "1234567892",
                            Title = "To Kill a Mockingbird",
                            TotalCopies = 75
                        },
                        new
                        {
                            Id = new Guid("dc6efd59-b2b6-4f81-9608-dce9c39945cf"),
                            AuthorId = new Guid("517c6f8c-8abc-4183-a2b9-5bb9e76b3b3a"),
                            BookType = 0,
                            CategoryId = new Guid("1994ecb4-d361-4739-871d-c2bf902e463c"),
                            CopiesInUse = 45,
                            Isbn = "1234567893",
                            Title = "The Catcher in the Rye",
                            TotalCopies = 50
                        },
                        new
                        {
                            Id = new Guid("a7e05753-b12f-41e0-86b1-0b639c25eacd"),
                            AuthorId = new Guid("55febf99-1b0d-42b8-a43b-8e5a1c4b3690"),
                            BookType = 0,
                            CategoryId = new Guid("21bcefe9-7b70-48a5-9438-fe9281411403"),
                            CopiesInUse = 22,
                            Isbn = "1234567894",
                            Title = "The Great Gatsby",
                            TotalCopies = 50
                        },
                        new
                        {
                            Id = new Guid("e172454f-82aa-472f-bdb2-6781477c651a"),
                            AuthorId = new Guid("7b453ac1-18ca-4887-a8d9-ab81b4276d1e"),
                            BookType = 0,
                            CategoryId = new Guid("46123bcc-66c8-4360-a10e-c020989b66e5"),
                            CopiesInUse = 35,
                            Isbn = "1234567895",
                            Title = "The Alchemist",
                            TotalCopies = 50
                        },
                        new
                        {
                            Id = new Guid("0e733f33-1e0b-4702-822a-8723e77509db"),
                            AuthorId = new Guid("8997e2d9-5f02-4da4-a4ad-d069608fccde"),
                            BookType = 0,
                            CategoryId = new Guid("534f3066-8ac4-49c4-abac-db5351d916bf"),
                            CopiesInUse = 11,
                            Isbn = "1234567896",
                            Title = "The Book Thief",
                            TotalCopies = 75
                        },
                        new
                        {
                            Id = new Guid("7da57676-de31-4104-825c-c895db522ab2"),
                            AuthorId = new Guid("b48af8fc-0899-4b36-9140-19c64a4f6fcd"),
                            BookType = 1,
                            CategoryId = new Guid("d09ddf34-e274-4807-94ec-ea5566358746"),
                            CopiesInUse = 14,
                            Isbn = "1234567897",
                            Title = "The Chronicles of Narnia",
                            TotalCopies = 100
                        },
                        new
                        {
                            Id = new Guid("16056931-4d00-4aca-958d-ae698f8f64cd"),
                            AuthorId = new Guid("b614713f-239b-4e6a-8ade-b87c9425c874"),
                            BookType = 1,
                            CategoryId = new Guid("d09ddf34-e274-4807-94ec-ea5566358746"),
                            CopiesInUse = 40,
                            Isbn = "1234567898",
                            Title = "The Da Vinci Code",
                            TotalCopies = 50
                        },
                        new
                        {
                            Id = new Guid("cb577182-fe3c-4c6f-ae4e-45e4d3cd202f"),
                            AuthorId = new Guid("c32c75c2-d6be-4391-97d5-b35f54a5520c"),
                            BookType = 0,
                            CategoryId = new Guid("1994ecb4-d361-4739-871d-c2bf902e463c"),
                            CopiesInUse = 35,
                            Isbn = "1234567899",
                            Title = "The Grapes of Wrath",
                            TotalCopies = 50
                        },
                        new
                        {
                            Id = new Guid("3112e468-a139-464b-bff3-40fd3e30d7c9"),
                            AuthorId = new Guid("e9c23ec1-d8d2-4142-84ae-bbfdf1beab9a"),
                            BookType = 1,
                            CategoryId = new Guid("21bcefe9-7b70-48a5-9438-fe9281411403"),
                            CopiesInUse = 35,
                            Isbn = "1234567900",
                            Title = "The Hitchhiker''s Guide to the Galaxy",
                            TotalCopies = 50
                        },
                        new
                        {
                            Id = new Guid("abbb48f7-1eee-4c02-99e1-039a5ed353cb"),
                            AuthorId = new Guid("f0024628-4947-41b2-8ed0-aab6c9e2bd51"),
                            BookType = 0,
                            CategoryId = new Guid("1994ecb4-d361-4739-871d-c2bf902e463c"),
                            CopiesInUse = 8,
                            Isbn = "8901234567",
                            Title = "Moby-Dick",
                            TotalCopies = 30
                        },
                        new
                        {
                            Id = new Guid("2c471656-d95e-4a3f-b4f0-5c8b30aa8011"),
                            AuthorId = new Guid("251e8346-65c1-496d-823c-cd433649347c"),
                            BookType = 1,
                            CategoryId = new Guid("21bcefe9-7b70-48a5-9438-fe9281411403"),
                            CopiesInUse = 0,
                            Isbn = "9012345678",
                            Title = "To Kill a Mockingbird",
                            TotalCopies = 20
                        },
                        new
                        {
                            Id = new Guid("a4804e31-4e9c-4d44-be70-57e084134a28"),
                            AuthorId = new Guid("517c6f8c-8abc-4183-a2b9-5bb9e76b3b3a"),
                            BookType = 0,
                            CategoryId = new Guid("21bcefe9-7b70-48a5-9438-fe9281411403"),
                            CopiesInUse = 1,
                            Isbn = "0123456789",
                            Title = "The Catcher in the Rye",
                            TotalCopies = 10
                        });
                });

            modelBuilder.Entity("Domain.Entities.Category", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("Name")
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_categories");

                    b.ToTable("categories", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("1994ecb4-d361-4739-871d-c2bf902e463c"),
                            Name = "Fiction"
                        },
                        new
                        {
                            Id = new Guid("21bcefe9-7b70-48a5-9438-fe9281411403"),
                            Name = "Non-Fiction"
                        },
                        new
                        {
                            Id = new Guid("46123bcc-66c8-4360-a10e-c020989b66e5"),
                            Name = "Biography"
                        },
                        new
                        {
                            Id = new Guid("534f3066-8ac4-49c4-abac-db5351d916bf"),
                            Name = "Mystery"
                        },
                        new
                        {
                            Id = new Guid("d09ddf34-e274-4807-94ec-ea5566358746"),
                            Name = "Sci-Fi"
                        });
                });

            modelBuilder.Entity("Domain.Entities.Book", b =>
                {
                    b.HasOne("Domain.Entities.Author", "Author")
                        .WithMany("Books")
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_books_authors_author_id");

                    b.HasOne("Domain.Entities.Category", "Category")
                        .WithMany("Books")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_books_categories_category_id");

                    b.Navigation("Author");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("Domain.Entities.Author", b =>
                {
                    b.Navigation("Books");
                });

            modelBuilder.Entity("Domain.Entities.Category", b =>
                {
                    b.Navigation("Books");
                });
#pragma warning restore 612, 618
        }
    }
}
